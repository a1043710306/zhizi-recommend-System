<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
       xmlns:cache="http://www.springframework.org/schema/cache" 
          xmlns:task="http://www.springframework.org/schema/task"   
         xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
    "
 
    > 
	
   	
	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		 <property name="maxActive" value="${jdbc.maxActive}" />  
        <property name="maxIdle" value="${jdbc.maxIdle}" />  
        <property name="minIdle" value="${jdbc.minIdle}" />  
        
        <property name="maxWait" value="${jdbc.maxWait}" />  
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property><!--试该数据库连接的可用性 -->
		<property name="testOnBorrow">
			<value>true</value>
		</property><!--在取出连接时进行有效验证 -->
		<property name="testOnReturn">
			<value>true</value>
		</property><!--Connection返回的时候就要进行认证 -->
		<property name="testWhileIdle">
			<value>true</value>
		</property><!--Connection空闲的时候就要进行认证 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>3600000</value>
		</property><!--DBCP清空线程睡眠的间隙，如值为负数则不运行该线程 -->
		<property name="minEvictableIdleTimeMillis">
			<value>18000000</value>
		</property> 
    		
	</bean>
	
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 		 <property name="basePackage" value="com.inveno.dao" />
 		 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean> 

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	  
        <tx:annotation-driven transaction-manager="transactionManager" /> 
        
        
        <!-- 数据源二 --> 
    <bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc1.driverClassName}" />
		<property name="url" value="${jdbc1.url}"></property>
		<property name="username" value="${jdbc1.username}"></property>
		<property name="password" value="${jdbc1.password}"></property>
			 <property name="maxActive" value="${jdbc.maxActive}" />  
        <property name="maxIdle" value="${jdbc.maxIdle}" />  
        <property name="minIdle" value="${jdbc.minIdle}" />  
        
        <property name="maxWait" value="${jdbc.maxWait}" /> 
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property><!--试该数据库连接的可用性 -->
		<property name="testOnBorrow">
			<value>true</value>
		</property><!--在取出连接时进行有效验证 -->
		<property name="testOnReturn">
			<value>true</value>
		</property><!--Connection返回的时候就要进行认证 -->
		<property name="testWhileIdle">
			<value>true</value>
		</property><!--Connection空闲的时候就要进行认证 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>3600000</value>
		</property><!--DBCP清空线程睡眠的间隙，如值为负数则不运行该线程 -->
		<property name="minEvictableIdleTimeMillis">
			<value>18000000</value>
		</property> 
    		
	</bean>
	
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="configLocation" value="classpath:mybatis-config1.xml" />
	</bean>
	
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 		 <property name="basePackage" value="com.inveno.dao1" />
 		 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />
	</bean> 

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager1"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	  
        <tx:annotation-driven transaction-manager="transactionManager1" />  
	
	
	
</beans>