#列出所有爬虫來源
report.listContentBySource=select categories from t_content where source={0};
report.getCategoryMappingBySource=SELECT T.* FROM (SELECT SCM.channel_category_id, SCM.channel_category_name, CT.id category_id, SCM.category_name FROM t_source_category_mapping SCM LEFT JOIN t_category_type CT ON SCM.category_name=CT.category_name WHERE SCM.source={0}) T;
#report.getArticleSource=select distinct source from t_content;
report.getArticleSource=select distinct source from t_source_feeds;
report.listSourceInfo=select distinct source, source_type from t_content;
report.listSourceInfoBySource=select distinct source, source_type from t_content where source in ({0});

#每日爬虫入庫量統計
report.getDailyArticleCount=SELECT source, DATE(discovery_time) discovery_date, COUNT(1) save_count FROM t_content WHERE DATE(discovery_time)={1} AND source in ({0}) GROUP BY discovery_date, source ORDER BY source, discovery_date;
report.getDailyCrawledArticle=SELECT content_id, source FROM t_content WHERE DATE(discovery_time)={1} AND source in ({0}) ORDER BY source;
report.getDailyTransitArticle=SELECT news_id FROM t_turn_id WHERE DATE(create_time)={0};
#report.getArticleCountByTimeRange=SELECT result.crawler_type, result.source, COUNT(1) save_count FROM (SELECT crawler_type, source FROM {3} WHERE discovery_time >= {1} and discovery_time < {2} AND source in ({0}) union all SELECT crawler_type, source FROM {4} WHERE discovery_time >= {1} and discovery_time < {2} AND source in ({0})) result GROUP BY result.crawler_type, result.source;
#report.getLanguageArticleCountByTimeRange=SELECT result.country, result.language, result.source, result.state, COUNT(1) save_count FROM (SELECT country, language, source, state FROM {2} WHERE discovery_time >= {0} and discovery_time < {1} union all SELECT country, language, source, state FROM {3} WHERE discovery_time >= {0} and discovery_time < {1}) result GROUP BY result.country, result.language, result.source, result.state;

#微信爬取/發佈量統計
#新庫
report.getDailyCrawledArticleCount=select count(*) article_count from t_content where source={0} and DATE(discovery_time)={1};
report.getDailyCrawledActiveSourceFeedCount=select count(distinct source_feeds) source_feeds_count from t_content where source={0} and DATE(discovery_time)={1};
#舊庫
report.getDailyCandidateArticle=select * from s_channel_content_audit where rss_id in ({0}) and DATE(create_time)={1};
report.getDailyPublishedArticle=select * from s_channel_content       where rss_id in ({0}) and DATE(create_time)={1};
report.getDailyCandidateArticleByTimeRange=select * from s_channel_content_audit where rss_id in ({0}) and create_time>={1} and create_time<={2};
report.getDailyPublishedArticleByTimeRange=select * from s_channel_content       where rss_id in ({0}) and create_time>={1} and create_time<={2};
report.getDailyPublishedCount=select rss_id, DATE(create_time) create_date, count(*) article_count from s_channel_content_audit where rss_id in ({0}) and DATE(create_time)={1} group by rss_id;
report.listFilteredReason=select * from dd_table where parent_id=140;

report.listSourceFeeds=select AP.sourceFeeds from t_account_profile AP;
report.listSourceFeedsBySource=select source_id, source_feeds, source_feeds_name from t_source_category_mapping where source={0} order by source_id;
report.listSourceFeedsBySourceFilter=select source_id, source_feeds, source_feeds_name from t_source_category_mapping where source={0} and {1} order by source_id;

report.listFirmSourceFeedsBySource=select SCM.*, FS.status from (select source_id, source_feeds, source_feeds_name from t_source_category_mapping where source={0} order by source_id) SCM left join t_new_firm_source FS on fS.rss_id=SCM.source_id and firm_id={1};
report.listFirmSourceFeedsBySourceFilter=select SCM.*, FS.status from (select source_id, source_feeds, source_feeds_name from t_source_category_mapping where source={0} and {1} order by source_id) SCM left join t_new_firm_source FS on fS.rss_id=SCM.source_id and firm_id={2};
#查詢渠道及自動發佈配置
report.getRssReleaseFlag=select rss_id, releaseFlag from s_auto_release_rss where rss_id in ({0});
report.getRssReleaseFlagByFirmId=select AR.rss_id, AR.releaseFlag, FS.status from (select rss_id, releaseFlag from s_auto_release_rss where rss_id in ({0})) AR left join t_new_firm_source FS on FS.rss_id=AR.rss_id and FS.firm_id={1};

#海外爬取/發佈量統計
report.listCrawlerContentArticleCount=SELECT R.id, R.rss_name, R.rss_country, R.rss_language, R.source, R.category_name, R.get_type, count(*) article_count FROM s_channel_content_audit CCA left join s_rss R on CCA.rss_id=R.id where CCA.rss_id > 0 and DATE(CCA.create_time)={0} group by R.id;
report.listPublishContentArticleCount=SELECT R.id, R.rss_name, R.rss_country, R.rss_language, R.source, R.category_name, R.get_type, count(*) article_count FROM s_channel_content       CCA left join s_rss R on CCA.rss_id=R.id where CCA.rss_id > 0 and DATE(CCA.create_time)={0} group by R.id;
report.getFirmSource=select * from t_new_firm_source where status=1;

dashboard.listCrawlerArticleCount=select date_format(discovery_time, {3}) as statisticTS, source, source_type, country, language, content_type, categories, count(*) article_count from t_content where discovery_time>={1} and discovery_time<{2} and source in ({0}) group by source, source_type, country, language, content_type, categories order by article_count;
dashboard.listCrawlerArticleCountByProduct=select date_format(discovery_time, {3}) as statisticTS, source, source_type, country, language, firm_app, count(*) article_count from t_content where discovery_time>={1} and discovery_time<{2} and source in ({0}) group by source, source_type, country, language, firm_app order by article_count;

content.listAllProduct=select product_id, product from t_product;
content.getVersionCategoryMapping=select * from t_category_version_mapping;
content.listTurnData=select * from t_turn_id where news_id < {0} and description='''' limit 10000;
content.listTurnDataByTimeRange=select * from t_turn_id where create_time>={0} and create_time<{1} and description='''';
#content.listContentByTimeRange=select content_id, source, source_type, content_type, language, country, content_type, categories, firm_app, body_images_count, state, offshelf_code, offshelf_reason from t_content where discovery_time>={0} and discovery_time<{1};
content.listContentByTurnDataInTimeRange=select content_id, source, source_type, content_type, language, country, categories, firm_app, body_images_count, state, offshelf_code, offshelf_reason from t_content C join t_turn_id TI on C.content_id=TI.news_id where discovery_time>={0} and discovery_time<{1} and state={2};
content.listContentByStateInTimeRange=select C.content_id, source, source_type, content_type, language, country, content_type, categories, firm_app, body_images_count, state, offshelf_code, offshelf_reason from t_content C join t_content_edit_log L on L.content_id=C.content_id and edit_type=118 and L.operate_time>={0} and L.operate_time<{1} where state={2};
content.listContentAfterAuditingByStateTimeRange=select C.*, L.operate_time, L.edit_type from (select content_id, source, source_type, content_type, language, country, categories, firm_app, body_images_count, state, offshelf_code, offshelf_reason from t_content where discovery_time>={0} and discovery_time<{1}) C left join t_content_edit_log L on L.content_id=C.content_id and L.operate_time>={0} and edit_type={2} where C.state={3};
content.listContentInSlotRangeAfterAuditingByStateTimeRange=select C.content_id, C.source, C.source_type, C.content_type, C.language, C.country, C.categories, C.firm_app, C.body_images_count, C.state, C.offshelf_code, C.offshelf_reason, L.operate_time, L.edit_type  from (select * from t_content_edit_log where operate_time>={0} and operate_time<{1} and edit_type={2}) L join t_content C on L.content_id=C.content_id and state={3};
content.listContent=select * from t_content where content_id in ({0});
content.listFirmApp=select FS.firm_id, service_name from t_new_firm_source FS left join t_firm F on F.firm_id=FS.firm_id where rss_id={0} and status=1
content.getChannelContent=select * from s_channel_content where id={0};
content.getContent=select * from t_content where content_id={0};
content.getLanguage=select rss_language from s_channel_content SCC left join s_rss R on SCC.rss_id=R.id where SCC.id={0};
content.listOffshelfCode=select * from t_dictionary where type_name="offshelf_code";
content.listSourceFeeds=select id, source, source_type, source_feeds_url, source_feeds_host from t_source_feeds;

content.listCategoryByVersion=select * from t_category where version={0};
content.listProductScenario=select product, language, scenario_id, scenario_name, category_types from t_product_scenario_mapping;
content.scenarioCategoryCriteria=({0}) and publish_time >= DATE_SUB(DATE_FORMAT({1}, {2}), INTERVAL {3} DAY_HOUR) and publish_time < DATE_FORMAT({1}, {2})
content.getScenarioArticleCount=select COUNT(content_id) article_count from t_content where state=1 and language in ({0}, ''Multilingual'') and ({1});
